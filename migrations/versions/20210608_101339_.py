"""empty message

Revision ID: ffe6e7addd6c
Revises: 
Create Date: 2021-06-08 10:13:39.218078

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ffe6e7addd6c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appointment_types',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('appointment_type', sa.Text(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('fish_types',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('fish_type', sa.Text(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(
                        length=40), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.Column('feeder', sa.Boolean(), nullable=False),
                    sa.Column('zip_code', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('appointments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('date', sa.Date(), nullable=False),
                    sa.Column('time', sa.Time(), nullable=False),
                    sa.Column('completed', sa.Boolean(), nullable=False),
                    sa.Column('image_url', sa.Text(), nullable=False),
                    sa.Column('street_address', sa.Text(), nullable=False),
                    sa.Column('city', sa.String(length=100), nullable=False),
                    sa.Column('zip_code', sa.String(length=9), nullable=False),
                    sa.Column('feeder_id', sa.Integer(), nullable=True),
                    sa.Column('appointment_type_id',
                              sa.Integer(), nullable=True),
                    sa.Column('fish_type_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['appointment_type_id'], [
                        'appointment_types.id'], ),
                    sa.ForeignKeyConstraint(['feeder_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(
                        ['fish_type_id'], ['fish_types.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('reviews',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('feeder_id', sa.Integer(), nullable=False),
                    sa.Column('rating', sa.Integer(), nullable=True),
                    sa.Column('appointment_id', sa.Integer(), nullable=False),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.ForeignKeyConstraint(['appointment_id'], [
                                            'appointments.id'], ),
                    sa.ForeignKeyConstraint(['feeder_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('appointments')
    op.drop_table('users')
    op.drop_table('fish_types')
    op.drop_table('appointment_types')
    # ### end Alembic commands ###
